name: Build Craig

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            target: 'x86_64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: '--target x86_64-unknown-linux-gnu'
            target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            target: 'x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 60
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install frontend dependencies
      run: npm ci

    - name: Install bun
      uses: oven-sh/setup-bun@v2

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
        # More aggressive caching on Windows
        cache-on-failure: ${{ matrix.platform == 'windows-latest' }}
        shared-key: ${{ matrix.platform }}-${{ matrix.target }}

    - name: Install sccache
      uses: mozilla-actions/sccache-action@v0.0.6

    - name: Configure Windows build (Windows only)
      if: matrix.platform == 'windows-latest'
      run: |
        # Configure git for faster operations
        git config --global core.autocrlf false
        git config --global core.longpaths true
        # Set Windows-specific environment for faster builds
        echo "CARGO_NET_GIT_FETCH_WITH_CLI=true" >> $env:GITHUB_ENV
        echo "CARGO_BUILD_JOBS=2" >> $env:GITHUB_ENV

    - name: Build frontend
      run: npm run build

    - name: Build Tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RUSTC_WRAPPER: sccache
        SCCACHE_GHA_ENABLED: "true"
        SCCACHE_GHA_CACHE_TO: sccache-craig-${{ matrix.target }}
        SCCACHE_GHA_CACHE_FROM: sccache-craig-${{ matrix.target }}
        # Windows optimization: faster linking
        CARGO_INCREMENTAL: ${{ matrix.platform == 'windows-latest' && '0' || '1' }}
        CARGO_TARGET_X86_64_PC_WINDOWS_MSVC_LINKER: ${{ matrix.platform == 'windows-latest' && 'lld-link' || '' }}
        # Reduce debug info on Windows for faster builds
        CARGO_PROFILE_DEV_DEBUG: ${{ matrix.platform == 'windows-latest' && '0' || '2' }}
        CARGO_PROFILE_RELEASE_DEBUG: ${{ matrix.platform == 'windows-latest' && '0' || '1' }}
      with:
        tagName: ${{ github.event.release.tag_name }}
        releaseName: 'Craig v__VERSION__'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        args: ${{ matrix.args }}
        bundleIdentifier: ai.nichols.craig

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: craig-${{ matrix.target }}
        path: |
          src-tauri/target/${{ matrix.target }}/release/bundle/
          src-tauri/target/${{ matrix.target }}/release/craig*
        retention-days: 30

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create release assets
      run: |
        mkdir -p release-assets
        
        # Linux
        if [ -d "craig-x86_64-unknown-linux-gnu" ]; then
          tar -czf release-assets/craig-linux-x86_64.tar.gz -C craig-x86_64-unknown-linux-gnu .
        fi
        
        # macOS Intel
        if [ -d "craig-x86_64-apple-darwin" ]; then
          tar -czf release-assets/craig-macos-x86_64.tar.gz -C craig-x86_64-apple-darwin .
        fi
        
        # macOS Apple Silicon
        if [ -d "craig-aarch64-apple-darwin" ]; then
          tar -czf release-assets/craig-macos-aarch64.tar.gz -C craig-aarch64-apple-darwin .
        fi
        
        # Windows
        if [ -d "craig-x86_64-pc-windows-msvc" ]; then
          cd craig-x86_64-pc-windows-msvc && zip -r ../release-assets/craig-windows-x86_64.zip . && cd ..
        fi

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-download-page:
    needs: create-release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Trigger download page update
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"event_type":"update-downloads","client_payload":{"version":"${{ github.event.release.tag_name }}"}}' \
          https://api.github.com/repos/${{ github.repository }}/dispatches